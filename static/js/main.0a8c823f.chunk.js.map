{"version":3,"sources":["Components/Toolbar/NavigationBar.module.css","assets/webp/logo-ig-v2.webp","Components/HomePage.module.css","Components/Toolbar/NavigationItems.tsx","Components/Toolbar/NavigationBar.tsx","Components/Toolbar/SideDrawer.tsx","Containers/ToolbarContainer.tsx","Components/HomePage.tsx","Containers/HomePageContainer.tsx","Containers/PhotographyPageContainer.tsx","Containers/ProgrammingPageContainer.tsx","Containers/DesignPageContainer.tsx","Components/AboutMePage.tsx","Containers/AboutMePageContainer.tsx","App.js","serviceWorker.js","index.js","Components/Toolbar/NavigationItems.module.css","Components/Toolbar/SideDrawer.module.css"],"names":["module","exports","NavigationItems","className","styles","NavigationItem","to","exact","activeClassName","active","NavigationBar","props","DrawerToggle","onClick","handleShowOrHideDrawerToggleClick","Logo","handleLogoClick","src","logo","alt","DesktopOnly","SideDrawer","attachedClasses","isSideDrawerShow","push","Open","Close","Backdrop","join","ToolbarContainer","useState","setIsSideDrawerShow","toolbarHistory","useHistory","HomePage","background","HomePageContainer","PhotographyPageContainer","ProgrammingPageContainer","DesignPageContainer","AboutMePage","AboutMePageContainer","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0a8c823f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationBar\":\"NavigationBar_NavigationBar__2Nv8r\",\"Logo\":\"NavigationBar_Logo__j-sBw\",\"DesktopOnly\":\"NavigationBar_DesktopOnly__1cSRo\",\"DrawerToggle\":\"NavigationBar_DrawerToggle__1uV8_\"};","module.exports = __webpack_public_path__ + \"static/media/logo-ig-v2.36394865.webp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"HomePage_background__2za-l\"};","import styles from \"./NavigationItems.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst NavigationItems = () => {\r\n  return (\r\n      <ul className={styles.NavigationItems}>\r\n        <li className={styles.NavigationItem}>\r\n          <NavLink\r\n            to='/indragunawansite/'\r\n            exact\r\n            activeClassName={styles.active}>Home\r\n          </NavLink>\r\n        </li>\r\n        <li className={styles.NavigationItem}>\r\n          <NavLink\r\n            to='/indragunawansite/photography'\r\n            activeClassName={styles.active}>Photography\r\n          </NavLink>\r\n        </li>\r\n        <li className={styles.NavigationItem}>\r\n          <NavLink\r\n            to='/indragunawansite/design'\r\n            activeClassName={styles.active}>Design\r\n          </NavLink>\r\n        </li>\r\n        <li className={styles.NavigationItem}>\r\n          <NavLink\r\n            to='/indragunawansite/programming'\r\n            activeClassName={styles.active}>Programming\r\n          </NavLink>\r\n        </li>\r\n        <li className={styles.NavigationItem}>\r\n          <NavLink\r\n            to='/indragunawansite/about-me'\r\n            activeClassName={styles.active}>About Me\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n  )\r\n};\r\n\r\nexport default NavigationItems;\r\n","import React from 'react';\r\nimport logo from '../../assets/webp/logo-ig-v2.webp';\r\nimport styles from './NavigationBar.module.css';\r\nimport NavigationItems from \"./NavigationItems\";\r\n\r\ninterface ToolBarProps {\r\n  handleLogoClick: () => void;\r\n  handleShowOrHideDrawerToggleClick: () => void;\r\n}\r\n\r\nconst NavigationBar: React.FC<ToolBarProps> = (props: ToolBarProps) => {\r\n  return (\r\n    <header className={styles.NavigationBar}>\r\n      {/* Untuk Mobile */}\r\n      <div className={styles.DrawerToggle} onClick={props.handleShowOrHideDrawerToggleClick}>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n      </div>\r\n\r\n      <div className={styles.Logo} onClick={props.handleLogoClick}>\r\n        <img src={logo} alt=\"alt-ping-logo\"/>\r\n      </div>\r\n\r\n      {/* Untuk Desktop */}\r\n      <nav className={styles.DesktopOnly}>\r\n        <NavigationItems/>\r\n      </nav>\r\n    </header>\r\n  )\r\n};\r\n\r\nexport default NavigationBar;\r\n","import React, { Fragment } from 'react';\r\nimport styles from './SideDrawer.module.css';\r\nimport logo from '../../assets/webp/logo-ig-v2.webp';\r\nimport NavigationItems from \"./NavigationItems\";\r\n\r\ninterface SideDrawerProps {\r\n  isSideDrawerShow: boolean;\r\n  handleLogoClick: () => void;\r\n  handleShowOrHideDrawerToggleClick: () => void;\r\n}\r\n\r\nconst SideDrawer: React.FC<SideDrawerProps> = (props: SideDrawerProps) => {\r\n  let attachedClasses = [styles.SideDrawer];\r\n  props.isSideDrawerShow ?\r\n    attachedClasses.push(styles.Open) :\r\n    attachedClasses.push(styles.Close);\r\n\r\n  return (\r\n    <Fragment>\r\n      {\r\n        props.isSideDrawerShow?\r\n          <div className={styles.Backdrop} onClick={props.handleShowOrHideDrawerToggleClick}/> : null\r\n      }\r\n      <div className={attachedClasses.join(' ')}>\r\n        <div className={styles.Logo} onClick={props.handleLogoClick}>\r\n          <img src={logo} alt=\"alt-ping-logo\"/>\r\n        </div>\r\n        <nav>\r\n          <NavigationItems/>\r\n        </nav>\r\n      </div>\r\n    </Fragment>\r\n\r\n  )\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { Fragment, useState } from 'react';\r\nimport NavigationBar from \"../Components/Toolbar/NavigationBar\";\r\nimport SideDrawer from \"../Components/Toolbar/SideDrawer\";\r\nimport { useHistory } from 'react-router';\r\n\r\nconst ToolbarContainer = () => {\r\n  const [isSideDrawerShow, setIsSideDrawerShow] = useState(false);\r\n  const toolbarHistory = useHistory();\r\n\r\n  const handleLogoClick = () => {\r\n    toolbarHistory.push('/indragunawansite/');\r\n  };\r\n\r\n  const handleShowOrHideDrawerToggleClick = () => {\r\n    setIsSideDrawerShow(!isSideDrawerShow);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <NavigationBar handleShowOrHideDrawerToggleClick={handleShowOrHideDrawerToggleClick}\r\n                     handleLogoClick={handleLogoClick}/>\r\n      <SideDrawer isSideDrawerShow={isSideDrawerShow}\r\n                  handleLogoClick={handleLogoClick}\r\n                  handleShowOrHideDrawerToggleClick={handleShowOrHideDrawerToggleClick}\r\n      />\r\n    </Fragment>\r\n  )\r\n};\r\n\r\nexport default ToolbarContainer;\r\n","import React from 'react';\r\nimport styles from './HomePage.module.css';\r\n\r\nconst HomePage = () => {\r\n  return(\r\n    <div className={styles.background}>Home Page</div>\r\n  )\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport HomePage from \"../Components/HomePage\";\r\n\r\nconst HomePageContainer = () => {\r\n  return(\r\n    <HomePage/>\r\n  )\r\n};\r\n\r\nexport default HomePageContainer;\r\n","import React from 'react';\r\n\r\nconst PhotographyPageContainer = () => {\r\n  return(\r\n    <div>Photography page container</div>\r\n  )\r\n};\r\n\r\nexport default PhotographyPageContainer;\r\n","import React from 'react';\r\n\r\nconst ProgrammingPageContainer = () => {\r\n  return(\r\n    <div>Programming page container</div>\r\n  )\r\n};\r\n\r\nexport default ProgrammingPageContainer;\r\n","import React from 'react';\r\n\r\nconst DesignPageContainer = () => {\r\n  return(\r\n    <div>Design page container</div>\r\n  )\r\n};\r\n\r\nexport default DesignPageContainer;\r\n","import React from 'react';\r\n\r\nconst AboutMePage = () => {\r\n  return(\r\n    <div>a</div>\r\n  )\r\n};\r\n\r\nexport default AboutMePage;\r\n","import React from 'react';\r\nimport AboutMePage from \"../Components/AboutMePage\";\r\n\r\nconst AboutMePageContainer = () => {\r\n  return(\r\n    <AboutMePage/>\r\n  )\r\n};\r\n\r\nexport default AboutMePageContainer;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport ToolbarContainer from \"./Containers/ToolbarContainer\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport HomePageContainer from \"./Containers/HomePageContainer\";\r\nimport PhotographyPageContainer from \"./Containers/PhotographyPageContainer\";\r\nimport ProgrammingPageContainer from \"./Containers/ProgrammingPageContainer\";\r\nimport DesignPageContainer from \"./Containers/DesignPageContainer\";\r\nimport AboutMePageContainer from \"./Containers/AboutMePageContainer\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <ToolbarContainer/>\r\n                <Switch>\r\n                    <Route path=\"/indragunawansite/\" exact component={HomePageContainer}/>\r\n                    <Route path=\"/indragunawansite/photography\" component={PhotographyPageContainer}/>\r\n                    <Route path=\"/indragunawansite/design\" component={DesignPageContainer}/>\r\n                    <Route path=\"/indragunawansite/programming\" component={ProgrammingPageContainer}/>\r\n                    <Route path=\"/indragunawansite/about-me\" component={AboutMePageContainer}/>\r\n                </Switch>\r\n        </div>\r\n);\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__MGtey\",\"NavigationItem\":\"NavigationItems_NavigationItem__kzBtk\",\"active\":\"NavigationItems_active__3biRY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"SideDrawer_Backdrop__WJB64\",\"Logo\":\"SideDrawer_Logo__36Cb7\",\"SideDrawer\":\"SideDrawer_SideDrawer__3fSM5\",\"Open\":\"SideDrawer_Open__2zW_f\",\"Close\":\"SideDrawer_Close__rYgdz\"};"],"sourceRoot":""}